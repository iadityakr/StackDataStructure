# Largest Rectangle in Histogram

class Solution {
    public int[] nextSmallerElement(int [] arr, int n){
        int [] ans = new int[n];
        ans[n-1] = n;

        Stack<Integer> st = new Stack<>();
        st.push(n-1);

        for(int i=n-2; i >= 0; i--){
            while(st.size() > 0 && arr[st.peek()] >= arr[i]){
                st.pop();
            }
            if(st.size() == 0){
                ans[i] = n;
            }else{
                ans[i] = st.peek();
            }
            st.push(i);
        }
        return ans;
    }
    public int[] prevSmallerElement(int [] arr, int n){
        int [] ans = new int[n];
        ans[0] = -1;

        Stack<Integer> st = new Stack<>();
        st.push(0);

        for(int i=1; i < n; i++){
            while(st.size() > 0 && arr[st.peek()] >= arr[i]){
                st.pop();
            }
            if(st.size() == 0){
                ans[i] = -1;
            }else{
                ans[i] = st.peek();
            }
            st.push(i);
        }
        return ans;
    }
    public int largestRectangleArea(int[] arr) {
        int n = arr.length;

        int [] next = new int[n];
        int [] prev = new int[n];

        next = nextSmallerElement(arr, n);
        prev = prevSmallerElement(arr, n);

        int maxArea = Integer.MIN_VALUE;

        for(int i=0; i < n; i++){
            int width = next[i] - prev[i] - 1;
            int area = arr[i] * width;
            if(area > maxArea){
                maxArea = area;
            }
        }
        return maxArea;
    }
}
